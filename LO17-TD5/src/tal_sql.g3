grammar tal_sql;

listerequetes returns [String sql = ""]
	@init	{Arbre lr_arbre;}: 
		r = requete POINT
			{
				lr_arbre = $r.req_arbre;
				sql = lr_arbre.sortArbre();
			}
;

requete returns [Arbre req_arbre = new Arbre("")]
	@init {Arbre ps_arbre, rub_ps_arbre;} :
		SELECT 
			{
				req_arbre.ajouteFils(new Arbre("","select distinct"));
			} 
		(((ARTICLE | TITRE ARTICLE) MOT
                                  			{
                                  			    req_arbre.ajouteFils(new Arbre("","texte.fichier"));
                                  				req_arbre.ajouteFils(new Arbre("","from texte"));
                                  				req_arbre.ajouteFils(new Arbre("","where"));
                                  			}
                                  			ps = params
                                              			{
                                              				ps_arbre = $ps.les_pars_arbre;
                                              				req_arbre.ajouteFils(ps_arbre);
                                              			})
                                          | (BULLETIN MOT
                                            			{
                                            			    req_arbre.ajouteFils(new Arbre("","texte.bulletin"));
                                            				req_arbre.ajouteFils(new Arbre("","from texte"));
                                            				req_arbre.ajouteFils(new Arbre("","where"));
                                            			}
                                            			ps = params
                                                        			{
                                                        				ps_arbre = $ps.les_pars_arbre;
                                                        				req_arbre.ajouteFils(ps_arbre);
                                                        			})
         | ((ARTICLE | TITRE ARTICLE) RUBRIQUE
                                             			{
                                             			    req_arbre.ajouteFils(new Arbre("","rubrique.fichier"));
                                             				req_arbre.ajouteFils(new Arbre("","from rubrique"));
                                             				req_arbre.ajouteFils(new Arbre("","where"));
                                             			}
                                             			rub_ps = rubrique_param
                                                         			{
                                                         				rub_ps_arbre = $rub_ps.lerubpar_arbre;
                                                         				req_arbre.ajouteFils(rub_ps_arbre);
                                                         			})
		| ( (ARTICLE | TITRE ARTICLE) DATE
		{
		                req_arbre.ajouteFils(new Arbre("","date.fichier"));
        				req_arbre.ajouteFils(new Arbre("","from date"));
        				req_arbre.ajouteFils(new Arbre("","where"));
        			}
        d = date
        			{
        				ps_arbre = $d.date_arbre;
        				req_arbre.ajouteFils(ps_arbre);
        			})
        | ( BULLETIN DATE
          		{
          		                req_arbre.ajouteFils(new Arbre("","date.bulletin"));
                  				req_arbre.ajouteFils(new Arbre("","from date"));
                  				req_arbre.ajouteFils(new Arbre("","where"));
                  			}
                  d = date
                  			{
                  				ps_arbre = $d.date_arbre;
                  				req_arbre.ajouteFils(ps_arbre);
                  			})
        | ((ARTICLE | TITRE ARTICLE) MOT ps = params DATE d = date
                		{
                		                req_arbre.ajouteFils(new Arbre("","texte.fichier"));
                        				req_arbre.ajouteFils(new Arbre("","from texte LEFT JOIN date ON texte.fichier = date.fichier"));
                        				req_arbre.ajouteFils(new Arbre("","where"));
                        				ps_arbre = $ps.les_pars_arbre;
                                        req_arbre.ajouteFils(ps_arbre);
                                        req_arbre.ajouteFils(new Arbre("", "AND"));
                                        ps_arbre = $d.date_arbre;
                                        req_arbre.ajouteFils(ps_arbre);
                        			})
         |(BULLETIN MOT ps = params DATE d = date
                          		{
                          		                req_arbre.ajouteFils(new Arbre("","texte.bulletin"));
                                  				req_arbre.ajouteFils(new Arbre("","from texte LEFT JOIN date ON texte.fichier = date.fichier"));
                                  				req_arbre.ajouteFils(new Arbre("","where"));
                                  				ps_arbre = $ps.les_pars_arbre;
                                                  req_arbre.ajouteFils(ps_arbre);
                                                  req_arbre.ajouteFils(new Arbre("", "AND"));
                                                  ps_arbre = $d.date_arbre;
                                                  req_arbre.ajouteFils(ps_arbre);
                                  			}))

;

params returns [Arbre les_pars_arbre = new Arbre("")]
	@init	{Arbre sparams_arbre, par2_arbre;} :
	sparams = suite_params
	{
	    sparams_arbre = $sparams.suite_params_arbre;
         les_pars_arbre.ajouteFils(sparams_arbre);
	}
			(CONJ_OU par2 = param
            			{
            			par2_arbre = $par2.lepar_arbre;
                                                les_pars_arbre.ajouteFils(new Arbre("", "OR"));
                                                les_pars_arbre.ajouteFils(par2_arbre);
            			}
            		 | CONJ_ET par2 = param
            			{
            			par2_arbre = $par2.lepar_arbre;
                                                les_pars_arbre.ajouteFils(new Arbre("", "AND"));
                                                les_pars_arbre.ajouteFils(par2_arbre);
            			})*
;

dateparams returns [Arbre les_pars_arbre = new Arbre("")]
	@init	{Arbre sparams_arbre, par2_arbre;} :
	sparams = suite_params
	{
	    sparams_arbre = $sparams.suite_params_arbre;
         les_pars_arbre.ajouteFils(sparams_arbre);
	}
;

suite_params returns [Arbre suite_params_arbre  = new Arbre("")]
    @init {Arbre par1_arbre, par3_arbre;} :
    par1 = param
        			{
        				par1_arbre = $par1.lepar_arbre;
        				suite_params_arbre.ajouteFils(par1_arbre);
        			}
    		(par3 = param
    			{
    				par3_arbre = $par3.lepar_arbre;
    				suite_params_arbre.ajouteFils(new Arbre("", "AND"));
    				suite_params_arbre.ajouteFils(par3_arbre);
    			})*
;

param returns [Arbre lepar_arbre = new Arbre("")]
    @init {Arbre d_arbre;} :
	v = VAR
       		{ lepar_arbre.ajouteFils(new Arbre("mot like ", "'\%"+v.getText()+"\%'"));}
;

rubrique_param returns [Arbre lerubpar_arbre = new Arbre("")]
    @init {Arbre d_arbre;} :
	v = VAR
       		{ lerubpar_arbre.ajouteFils(new Arbre("LOWER(rubrique) like ", "'\%"+v.getText()+"\%'"));}
;

date returns [Arbre date_arbre = new Arbre("")] :
    (j = JOUR
		{ date_arbre.ajouteFils(new Arbre("jour =", "'"+j.getText()+"'"));}
	    m = MOIS
        	    { date_arbre.ajouteFils(new Arbre("", "AND"));
        	    date_arbre.ajouteFils(new Arbre("mois =", "'"+m.getText()+"'"));}
        	    a = ANNEE
                        	    { date_arbre.ajouteFils(new Arbre("", "AND"));
                        	    date_arbre.ajouteFils(new Arbre("annee =", "'"+a.getText()+"'"));})
	 | (m = MOIS
               	    { date_arbre.ajouteFils(new Arbre("mois =", "'"+m.getText()+"'"));}
               	    a = ANNEE
                               	    { date_arbre.ajouteFils(new Arbre("", "AND"));
                               	    date_arbre.ajouteFils(new Arbre("annee =", "'"+a.getText()+"'"));})
	 | a = ANNEE
	    { date_arbre.ajouteFils(new Arbre("annee =", "'"+a.getText()+"'"));}
;

SELECT : 'vouloir'
;

ARTICLE : 'article'
;

TITRE : 'titre'
;

CONTACT : 'contact'
;

BULLETIN : 'bulletin'
;

CONJ_ET : 'et'
 ;

 CONJ_OU : 'ou'
 ;

POINT : '.'
;

MOT : 'mot' | 'contenir' | 'parler'
;

RUBRIQUE : 'rubrique'
;

DATE : 'parution' | 'redaction'
;

MOIS 	: ('0'..'1')('0'..'9')
;

JOUR 	: ('0'..'9')('0'..'9')
;

ANNEE 	: ('0'..'9')('0'..'9')('0'..'9')('0'..'9')
;

WS  : (' ' |'\t' | '\r' | 'je' | 'qui' | 'dont') {skip();} | '\n'
;

VAR 	: ('A'..'Z' | 'a'..'z' | '0'..'9')('a'..'z')*('0'..'9')*
;